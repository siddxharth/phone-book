{"ast":null,"code":"import { css } from 'styled-components';\nimport { colorIsDark, getRGBA, normalizeColor } from './colors'; // evalStyle() converts a styled-components item into a string\n\nvar evalStyle = function evalStyle(arg, theme) {\n  if (arg && Array.isArray(arg) && typeof arg[0] === 'function') {\n    return arg[0]({\n      theme: theme\n    });\n  }\n\n  return arg;\n};\n\nexport var normalizeBackground = function normalizeBackground(background, theme) {\n  // If the background has a light or dark object, use that\n  var result = background;\n\n  if (background) {\n    if (theme.dark && background.dark && typeof background.dark !== 'boolean') {\n      result = background.dark;\n    } else if (!theme.dark && background.light && typeof background.light !== 'boolean') {\n      result = background.light;\n    }\n\n    result = evalStyle(result, theme);\n  }\n\n  return result;\n};\nexport var backgroundIsDark = function backgroundIsDark(backgroundArg, theme) {\n  var background = normalizeBackground(backgroundArg, theme);\n  var result;\n\n  if (background) {\n    if (typeof background === 'object') {\n      var color = background.color,\n          dark = background.dark,\n          opacity = background.opacity;\n\n      if (typeof dark === 'boolean') {\n        result = dark;\n      } else if (color && ( // weak opacity means we keep the existing darkness\n      !opacity || opacity !== 'weak')) {\n        var backgroundColor = normalizeColor(background.color, theme);\n\n        if (backgroundColor) {\n          result = colorIsDark(backgroundColor);\n        }\n      }\n    } else {\n      var _color = normalizeColor(background, theme);\n\n      if (_color) {\n        result = colorIsDark(_color);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar darkContext = function darkContext(backgroundColor) {\n  var isDark = colorIsDark(backgroundColor);\n  if (isDark === undefined) return undefined;\n  return isDark ? 'dark' : 'light';\n}; // Returns an array of two CSS colors: [background, color]\n// Either could be undefined.\n// background could be a CSS gradient, like \"linear-gradient(...)\"\n\n\nexport var backgroundAndTextColors = function backgroundAndTextColors(backgroundArg, textArg, theme) {\n  if (!backgroundArg) return [undefined, textArg];\n  var global = theme.global;\n  var background = normalizeBackground(backgroundArg, theme);\n  var text = textArg || global.colors.text;\n  var backgroundColor;\n  var textColor;\n\n  if (typeof background === 'object') {\n    if (background.dark === false) {\n      textColor = text.light || text;\n    } else if (background.dark) {\n      textColor = text.dark || text;\n    }\n\n    if (background.color) {\n      var color = normalizeColor(background.color, theme, background.dark);\n      var opacity = background.opacity === true ? global.opacity.medium : global.opacity[background.opacity] || background.opacity;\n      backgroundColor = getRGBA(color, opacity) || color; // If we don't have a textColor already, and we aren't too translucent,\n      // set the textColor to have the best contrast against the background\n      // color.\n\n      if (!textColor && (opacity === undefined || opacity > 0.3)) {\n        var shade = darkContext(backgroundColor, theme);\n        textColor = normalizeColor(shade && text[shade] || text, theme);\n      }\n    }\n  } else {\n    backgroundColor = normalizeColor(background, theme);\n\n    var _shade = darkContext(backgroundColor, theme);\n\n    if (_shade) {\n      textColor = normalizeColor(text[_shade] || text, theme, _shade === 'dark');\n    } else {\n      // If we can't determine the shade, we assume this isn't a simple color.\n      // It could be a gradient. backgroundStyle() will take care of that case.\n      if (backgroundColor !== 'transparent') backgroundColor = undefined;\n      if (text) textColor = normalizeColor(text, theme);\n    }\n  } // if textArg is false, we don't want the textColor, used for Button hover\n\n\n  if (textArg === false) textColor = undefined;\n  return [backgroundColor, textColor];\n};\nexport var backgroundStyle = function backgroundStyle(backgroundArg, theme, textColorArg) {\n  // for Grommet component, if the background isn't defined, don't set it\n  if (backgroundArg === undefined) return undefined;\n  var background = normalizeBackground(backgroundArg, theme);\n\n  if (typeof background === 'string' && background.lastIndexOf('url', 0) === 0) {\n    return css([\"background:\", \" no-repeat center center;background-size:cover;\"], background);\n  }\n\n  var _backgroundAndTextCol = backgroundAndTextColors(background, textColorArg, theme),\n      backgroundColor = _backgroundAndTextCol[0],\n      textColor = _backgroundAndTextCol[1];\n\n  if (background.image) {\n    var backgroundStyles = \"\\n      \" + (backgroundColor ? \"background-color: \" + backgroundColor + \";\" : '') + \"\\n      background-image: \" + background.image + \";\\n      background-repeat: \" + (background.repeat || 'no-repeat') + \";\\n      background-position: \" + (background.position || 'center center') + \";\\n      background-size: \" + (background.size || 'cover') + \";\\n    \"; // allow both background color and image, in case the image doesn't fill\n    // when image and opacity are used together, we need to use pseudo :before\n    // to ensure that only image and background color are affected by opacity\n    // but not the container contents\n\n    return css([\"\", \" \", \"\"], textColor ? \"color: \" + textColor + \";\" : '', !background.opacity ? backgroundStyles : \"position: relative;\\n        z-index: 0;\\n        &:before {\\n          content: '';\\n          position: absolute;\\n          top: 0;\\n          right: 0;\\n          left: 0;\\n          bottom: 0;\\n          z-index: -1;\\n          \" + backgroundStyles + \"\\n          opacity: \" + (background.opacity === true ? theme.global.opacity.medium : theme.global.opacity[background.opacity] || background.opacity) + \";\\n        }\");\n  }\n\n  if (backgroundColor) {\n    return css([\"background-color:\", \";\", \"\"], backgroundColor, textColor ? \"color: \" + textColor + \";\" : '');\n  }\n\n  if (typeof background === 'string') // This case takes care of gradients\n    // or theme colors that use CSS names like 'crimson' that we don't parse\n    return css([\"background:\", \";\"], normalizeColor(background, theme));\n  return undefined;\n};\nexport var activeStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.active.background, props.theme), props.theme, props.theme.global.active.color);\n});\nexport var selectedStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.selected.background, props.theme), props.theme, props.theme.global.selected.color);\n});\nexport var getHoverIndicatorStyle = function getHoverIndicatorStyle(hoverIndicator, theme) {\n  var background;\n  var elevation;\n\n  if (hoverIndicator === true || hoverIndicator === 'background') {\n    background = theme.global.hover.background;\n  } else if (typeof hoverIndicator === 'object') {\n    if (hoverIndicator.elevation || hoverIndicator.background) {\n      elevation = hoverIndicator.elevation;\n      background = hoverIndicator.background;\n    } else background = hoverIndicator;\n  } else {\n    background = hoverIndicator;\n  }\n\n  return css([\"\", \" \", \"\"], backgroundStyle(background, theme, theme.global.hover.color), elevation && \"box-shadow: \" + theme.global.elevation[theme.dark ? 'dark' : 'light'][elevation] + \";\");\n};","map":{"version":3,"names":["css","colorIsDark","getRGBA","normalizeColor","evalStyle","arg","theme","Array","isArray","normalizeBackground","background","result","dark","light","backgroundIsDark","backgroundArg","color","opacity","backgroundColor","_color","darkContext","isDark","undefined","backgroundAndTextColors","textArg","global","text","colors","textColor","medium","shade","_shade","backgroundStyle","textColorArg","lastIndexOf","_backgroundAndTextCol","image","backgroundStyles","repeat","position","size","activeStyle","props","active","selectedStyle","selected","getHoverIndicatorStyle","hoverIndicator","elevation","hover"],"sources":["/Users/siddharthkhatri/Developer/React JS/phone-book/client/node_modules/grommet/es6/utils/background.js"],"sourcesContent":["import { css } from 'styled-components';\nimport { colorIsDark, getRGBA, normalizeColor } from './colors'; // evalStyle() converts a styled-components item into a string\n\nvar evalStyle = function evalStyle(arg, theme) {\n  if (arg && Array.isArray(arg) && typeof arg[0] === 'function') {\n    return arg[0]({\n      theme: theme\n    });\n  }\n\n  return arg;\n};\n\nexport var normalizeBackground = function normalizeBackground(background, theme) {\n  // If the background has a light or dark object, use that\n  var result = background;\n\n  if (background) {\n    if (theme.dark && background.dark && typeof background.dark !== 'boolean') {\n      result = background.dark;\n    } else if (!theme.dark && background.light && typeof background.light !== 'boolean') {\n      result = background.light;\n    }\n\n    result = evalStyle(result, theme);\n  }\n\n  return result;\n};\nexport var backgroundIsDark = function backgroundIsDark(backgroundArg, theme) {\n  var background = normalizeBackground(backgroundArg, theme);\n  var result;\n\n  if (background) {\n    if (typeof background === 'object') {\n      var color = background.color,\n          dark = background.dark,\n          opacity = background.opacity;\n\n      if (typeof dark === 'boolean') {\n        result = dark;\n      } else if (color && ( // weak opacity means we keep the existing darkness\n      !opacity || opacity !== 'weak')) {\n        var backgroundColor = normalizeColor(background.color, theme);\n\n        if (backgroundColor) {\n          result = colorIsDark(backgroundColor);\n        }\n      }\n    } else {\n      var _color = normalizeColor(background, theme);\n\n      if (_color) {\n        result = colorIsDark(_color);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar darkContext = function darkContext(backgroundColor) {\n  var isDark = colorIsDark(backgroundColor);\n  if (isDark === undefined) return undefined;\n  return isDark ? 'dark' : 'light';\n}; // Returns an array of two CSS colors: [background, color]\n// Either could be undefined.\n// background could be a CSS gradient, like \"linear-gradient(...)\"\n\n\nexport var backgroundAndTextColors = function backgroundAndTextColors(backgroundArg, textArg, theme) {\n  if (!backgroundArg) return [undefined, textArg];\n  var global = theme.global;\n  var background = normalizeBackground(backgroundArg, theme);\n  var text = textArg || global.colors.text;\n  var backgroundColor;\n  var textColor;\n\n  if (typeof background === 'object') {\n    if (background.dark === false) {\n      textColor = text.light || text;\n    } else if (background.dark) {\n      textColor = text.dark || text;\n    }\n\n    if (background.color) {\n      var color = normalizeColor(background.color, theme, background.dark);\n      var opacity = background.opacity === true ? global.opacity.medium : global.opacity[background.opacity] || background.opacity;\n      backgroundColor = getRGBA(color, opacity) || color; // If we don't have a textColor already, and we aren't too translucent,\n      // set the textColor to have the best contrast against the background\n      // color.\n\n      if (!textColor && (opacity === undefined || opacity > 0.3)) {\n        var shade = darkContext(backgroundColor, theme);\n        textColor = normalizeColor(shade && text[shade] || text, theme);\n      }\n    }\n  } else {\n    backgroundColor = normalizeColor(background, theme);\n\n    var _shade = darkContext(backgroundColor, theme);\n\n    if (_shade) {\n      textColor = normalizeColor(text[_shade] || text, theme, _shade === 'dark');\n    } else {\n      // If we can't determine the shade, we assume this isn't a simple color.\n      // It could be a gradient. backgroundStyle() will take care of that case.\n      if (backgroundColor !== 'transparent') backgroundColor = undefined;\n      if (text) textColor = normalizeColor(text, theme);\n    }\n  } // if textArg is false, we don't want the textColor, used for Button hover\n\n\n  if (textArg === false) textColor = undefined;\n  return [backgroundColor, textColor];\n};\nexport var backgroundStyle = function backgroundStyle(backgroundArg, theme, textColorArg) {\n  // for Grommet component, if the background isn't defined, don't set it\n  if (backgroundArg === undefined) return undefined;\n  var background = normalizeBackground(backgroundArg, theme);\n\n  if (typeof background === 'string' && background.lastIndexOf('url', 0) === 0) {\n    return css([\"background:\", \" no-repeat center center;background-size:cover;\"], background);\n  }\n\n  var _backgroundAndTextCol = backgroundAndTextColors(background, textColorArg, theme),\n      backgroundColor = _backgroundAndTextCol[0],\n      textColor = _backgroundAndTextCol[1];\n\n  if (background.image) {\n    var backgroundStyles = \"\\n      \" + (backgroundColor ? \"background-color: \" + backgroundColor + \";\" : '') + \"\\n      background-image: \" + background.image + \";\\n      background-repeat: \" + (background.repeat || 'no-repeat') + \";\\n      background-position: \" + (background.position || 'center center') + \";\\n      background-size: \" + (background.size || 'cover') + \";\\n    \"; // allow both background color and image, in case the image doesn't fill\n    // when image and opacity are used together, we need to use pseudo :before\n    // to ensure that only image and background color are affected by opacity\n    // but not the container contents\n\n    return css([\"\", \" \", \"\"], textColor ? \"color: \" + textColor + \";\" : '', !background.opacity ? backgroundStyles : \"position: relative;\\n        z-index: 0;\\n        &:before {\\n          content: '';\\n          position: absolute;\\n          top: 0;\\n          right: 0;\\n          left: 0;\\n          bottom: 0;\\n          z-index: -1;\\n          \" + backgroundStyles + \"\\n          opacity: \" + (background.opacity === true ? theme.global.opacity.medium : theme.global.opacity[background.opacity] || background.opacity) + \";\\n        }\");\n  }\n\n  if (backgroundColor) {\n    return css([\"background-color:\", \";\", \"\"], backgroundColor, textColor ? \"color: \" + textColor + \";\" : '');\n  }\n\n  if (typeof background === 'string') // This case takes care of gradients\n    // or theme colors that use CSS names like 'crimson' that we don't parse\n    return css([\"background:\", \";\"], normalizeColor(background, theme));\n  return undefined;\n};\nexport var activeStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.active.background, props.theme), props.theme, props.theme.global.active.color);\n});\nexport var selectedStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.selected.background, props.theme), props.theme, props.theme.global.selected.color);\n});\nexport var getHoverIndicatorStyle = function getHoverIndicatorStyle(hoverIndicator, theme) {\n  var background;\n  var elevation;\n\n  if (hoverIndicator === true || hoverIndicator === 'background') {\n    background = theme.global.hover.background;\n  } else if (typeof hoverIndicator === 'object') {\n    if (hoverIndicator.elevation || hoverIndicator.background) {\n      elevation = hoverIndicator.elevation;\n      background = hoverIndicator.background;\n    } else background = hoverIndicator;\n  } else {\n    background = hoverIndicator;\n  }\n\n  return css([\"\", \" \", \"\"], backgroundStyle(background, theme, theme.global.hover.color), elevation && \"box-shadow: \" + theme.global.elevation[theme.dark ? 'dark' : 'light'][elevation] + \";\");\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}