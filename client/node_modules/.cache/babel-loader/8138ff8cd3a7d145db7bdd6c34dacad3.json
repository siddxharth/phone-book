{"ast":null,"code":"export var points = ['circle', 'diamond', 'square', 'star', 'triangle', 'triangleDown'];\nexport var heightYGranularity = {\n  xxsmall: {\n    fine: 2,\n    medium: 2\n  },\n  xsmall: {\n    fine: 3,\n    medium: 2\n  },\n  small: {\n    fine: 5,\n    medium: 3\n  },\n  medium: {\n    fine: 7,\n    medium: 5\n  },\n  large: {\n    fine: 9,\n    medium: 5\n  },\n  xlarge: {\n    fine: 11,\n    medium: 5\n  }\n};\nexport var halfPad = {\n  xlarge: 'large',\n  large: 'medium',\n  medium: 'small',\n  small: 'xsmall',\n  xsmall: 'xxsmall'\n};\nexport var doublePad = {\n  large: 'xlarge',\n  medium: 'large',\n  small: 'medium',\n  xsmall: 'small',\n  xxsmall: 'xsmall'\n};\nvar orderedSizes = ['xlarge', 'large', 'medium', 'small', 'xsmall', 'xxsmall', 'hair'];\nexport var largestSize = function largestSize(size1, size2) {\n  if (size1 && !size2) return size1;\n  if (size2 && !size1) return size2;\n  if (orderedSizes.indexOf(size1) < orderedSizes.indexOf(size2)) return size1;\n  return size2;\n};\nexport var createDateFormat = function createDateFormat(firstValue, lastValue, full) {\n  var dateFormat;\n  var startDate = new Date(firstValue);\n  var endDate = new Date(lastValue);\n\n  if ( // check for valid dates, this is the fastest way\n  !Number.isNaN(startDate.getTime()) && !Number.isNaN(endDate.getTime())) {\n    var delta = Math.abs(endDate - startDate);\n    var options;\n    if (delta < 60000) // less than 1 minute\n      options = full ? {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        day: undefined\n      } : {\n        second: '2-digit',\n        day: undefined\n      };else if (delta < 3600000) // less than 1 hour\n      options = full ? {\n        hour: 'numeric',\n        minute: '2-digit',\n        day: undefined\n      } : {\n        minute: '2-digit',\n        day: undefined\n      };else if (delta < 86400000) // less than 1 day\n      options = {\n        hour: 'numeric'\n      };else if (delta < 2592000000) // less than 30 days\n      options = {\n        month: full ? 'short' : 'numeric',\n        day: 'numeric'\n      };else if (delta < 31557600000) // less than 1 year\n      options = {\n        month: full ? 'long' : 'short'\n      }; // 1 year or more\n    else options = {\n      year: 'numeric'\n    };\n    if (options) dateFormat = new Intl.DateTimeFormat(undefined, options).format;\n  }\n\n  return dateFormat;\n};","map":{"version":3,"names":["points","heightYGranularity","xxsmall","fine","medium","xsmall","small","large","xlarge","halfPad","doublePad","orderedSizes","largestSize","size1","size2","indexOf","createDateFormat","firstValue","lastValue","full","dateFormat","startDate","Date","endDate","Number","isNaN","getTime","delta","Math","abs","options","hour","minute","second","day","undefined","month","year","Intl","DateTimeFormat","format"],"sources":["/Users/siddharthkhatri/Developer/React JS/phone-book/client/node_modules/grommet/es6/components/DataChart/utils.js"],"sourcesContent":["export var points = ['circle', 'diamond', 'square', 'star', 'triangle', 'triangleDown'];\nexport var heightYGranularity = {\n  xxsmall: {\n    fine: 2,\n    medium: 2\n  },\n  xsmall: {\n    fine: 3,\n    medium: 2\n  },\n  small: {\n    fine: 5,\n    medium: 3\n  },\n  medium: {\n    fine: 7,\n    medium: 5\n  },\n  large: {\n    fine: 9,\n    medium: 5\n  },\n  xlarge: {\n    fine: 11,\n    medium: 5\n  }\n};\nexport var halfPad = {\n  xlarge: 'large',\n  large: 'medium',\n  medium: 'small',\n  small: 'xsmall',\n  xsmall: 'xxsmall'\n};\nexport var doublePad = {\n  large: 'xlarge',\n  medium: 'large',\n  small: 'medium',\n  xsmall: 'small',\n  xxsmall: 'xsmall'\n};\nvar orderedSizes = ['xlarge', 'large', 'medium', 'small', 'xsmall', 'xxsmall', 'hair'];\nexport var largestSize = function largestSize(size1, size2) {\n  if (size1 && !size2) return size1;\n  if (size2 && !size1) return size2;\n  if (orderedSizes.indexOf(size1) < orderedSizes.indexOf(size2)) return size1;\n  return size2;\n};\nexport var createDateFormat = function createDateFormat(firstValue, lastValue, full) {\n  var dateFormat;\n  var startDate = new Date(firstValue);\n  var endDate = new Date(lastValue);\n\n  if ( // check for valid dates, this is the fastest way\n  !Number.isNaN(startDate.getTime()) && !Number.isNaN(endDate.getTime())) {\n    var delta = Math.abs(endDate - startDate);\n    var options;\n    if (delta < 60000) // less than 1 minute\n      options = full ? {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        day: undefined\n      } : {\n        second: '2-digit',\n        day: undefined\n      };else if (delta < 3600000) // less than 1 hour\n      options = full ? {\n        hour: 'numeric',\n        minute: '2-digit',\n        day: undefined\n      } : {\n        minute: '2-digit',\n        day: undefined\n      };else if (delta < 86400000) // less than 1 day\n      options = {\n        hour: 'numeric'\n      };else if (delta < 2592000000) // less than 30 days\n      options = {\n        month: full ? 'short' : 'numeric',\n        day: 'numeric'\n      };else if (delta < 31557600000) // less than 1 year\n      options = {\n        month: full ? 'long' : 'short'\n      }; // 1 year or more\n    else options = {\n      year: 'numeric'\n    };\n    if (options) dateFormat = new Intl.DateTimeFormat(undefined, options).format;\n  }\n\n  return dateFormat;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}