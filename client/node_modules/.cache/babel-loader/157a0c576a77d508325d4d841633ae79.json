{"ast":null,"code":"import React from 'react';\nimport { AnnounceContextPropTypes } from './propTypes';\n\nvar createAnnouncer = function createAnnouncer() {\n  var announcer = document.createElement('div');\n  announcer.id = 'grommet-announcer';\n  announcer.style.left = '-100%';\n  announcer.style.right = '100%';\n  announcer.style.position = 'fixed';\n  announcer.style['z-index'] = '-1';\n  document.body.insertBefore(announcer, document.body.firstChild);\n  return announcer;\n};\n\nexport var AnnounceContext = /*#__PURE__*/React.createContext(function (message, mode, timeout) {\n  if (mode === void 0) {\n    mode = 'polite';\n  }\n\n  if (timeout === void 0) {\n    timeout = 500;\n  } // we only create a new container if we don't have one already\n  // we create a separate node so that grommet does not set aria-hidden to it\n\n\n  var announcer = document.body.querySelector(\"#grommet-announcer[aria-live]\") || createAnnouncer();\n  announcer.setAttribute('aria-live', 'off');\n  announcer.innerHTML = message;\n  announcer.setAttribute('aria-live', mode);\n  setTimeout(function () {\n    announcer.innerHTML = '';\n  }, timeout);\n});\nAnnounceContext.propTypes = AnnounceContextPropTypes;","map":{"version":3,"names":["React","AnnounceContextPropTypes","createAnnouncer","announcer","document","createElement","id","style","left","right","position","body","insertBefore","firstChild","AnnounceContext","createContext","message","mode","timeout","querySelector","setAttribute","innerHTML","setTimeout","propTypes"],"sources":["/Users/siddharthkhatri/Developer/React JS/phone-book/node_modules/grommet/es6/contexts/AnnounceContext/AnnounceContext.js"],"sourcesContent":["import React from 'react';\nimport { AnnounceContextPropTypes } from './propTypes';\n\nvar createAnnouncer = function createAnnouncer() {\n  var announcer = document.createElement('div');\n  announcer.id = 'grommet-announcer';\n  announcer.style.left = '-100%';\n  announcer.style.right = '100%';\n  announcer.style.position = 'fixed';\n  announcer.style['z-index'] = '-1';\n  document.body.insertBefore(announcer, document.body.firstChild);\n  return announcer;\n};\n\nexport var AnnounceContext = /*#__PURE__*/React.createContext(function (message, mode, timeout) {\n  if (mode === void 0) {\n    mode = 'polite';\n  }\n\n  if (timeout === void 0) {\n    timeout = 500;\n  }\n\n  // we only create a new container if we don't have one already\n  // we create a separate node so that grommet does not set aria-hidden to it\n  var announcer = document.body.querySelector(\"#grommet-announcer[aria-live]\") || createAnnouncer();\n  announcer.setAttribute('aria-live', 'off');\n  announcer.innerHTML = message;\n  announcer.setAttribute('aria-live', mode);\n  setTimeout(function () {\n    announcer.innerHTML = '';\n  }, timeout);\n});\nAnnounceContext.propTypes = AnnounceContextPropTypes;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,aAAzC;;AAEA,IAAIC,eAAe,GAAG,SAASA,eAAT,GAA2B;EAC/C,IAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;EACAF,SAAS,CAACG,EAAV,GAAe,mBAAf;EACAH,SAAS,CAACI,KAAV,CAAgBC,IAAhB,GAAuB,OAAvB;EACAL,SAAS,CAACI,KAAV,CAAgBE,KAAhB,GAAwB,MAAxB;EACAN,SAAS,CAACI,KAAV,CAAgBG,QAAhB,GAA2B,OAA3B;EACAP,SAAS,CAACI,KAAV,CAAgB,SAAhB,IAA6B,IAA7B;EACAH,QAAQ,CAACO,IAAT,CAAcC,YAAd,CAA2BT,SAA3B,EAAsCC,QAAQ,CAACO,IAAT,CAAcE,UAApD;EACA,OAAOV,SAAP;AACD,CATD;;AAWA,OAAO,IAAIW,eAAe,GAAG,aAAad,KAAK,CAACe,aAAN,CAAoB,UAAUC,OAAV,EAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;EAC9F,IAAID,IAAI,KAAK,KAAK,CAAlB,EAAqB;IACnBA,IAAI,GAAG,QAAP;EACD;;EAED,IAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;IACtBA,OAAO,GAAG,GAAV;EACD,CAP6F,CAS9F;EACA;;;EACA,IAAIf,SAAS,GAAGC,QAAQ,CAACO,IAAT,CAAcQ,aAAd,CAA4B,+BAA5B,KAAgEjB,eAAe,EAA/F;EACAC,SAAS,CAACiB,YAAV,CAAuB,WAAvB,EAAoC,KAApC;EACAjB,SAAS,CAACkB,SAAV,GAAsBL,OAAtB;EACAb,SAAS,CAACiB,YAAV,CAAuB,WAAvB,EAAoCH,IAApC;EACAK,UAAU,CAAC,YAAY;IACrBnB,SAAS,CAACkB,SAAV,GAAsB,EAAtB;EACD,CAFS,EAEPH,OAFO,CAAV;AAGD,CAlByC,CAAnC;AAmBPJ,eAAe,CAACS,SAAhB,GAA4BtB,wBAA5B"},"metadata":{},"sourceType":"module"}