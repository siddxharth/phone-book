{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport { genericStyles, normalizeColor, textAlignStyle } from '../../utils';\nimport { defaultProps } from '../../default-props';\nvar colorStyle = css([\"color:\", \";\"], function (props) {\n  return normalizeColor(props.colorProp, props.theme);\n});\n\nvar sizeStyle = function sizeStyle(props) {\n  var size = props.size || 'medium';\n  var data = props.theme.paragraph[size];\n  return css([\"font-size:\", \";line-height:\", \";max-width:\", \";\"], data ? data.size : size, data ? data.height : 'normal', props.fillProp ? 'none' : data && data.maxWidth);\n};\n\nvar fontFamily = css([\"font-family:\", \";\"], function (props) {\n  return props.theme.paragraph.font.family;\n});\n\nvar maxlinesStyle = function maxlinesStyle(props) {\n  return props.maxLines && css([\"display:-webkit-box;-webkit-line-clamp:\", \";-webkit-box-orient:vertical;overflow:hidden;\"], props.maxLines);\n};\n\nvar StyledParagraph = styled.p.withConfig({\n  displayName: \"StyledParagraph\",\n  componentId: \"sc-tbetod-0\"\n})([\"\", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], genericStyles, function (props) {\n  return maxlinesStyle(props);\n}, function (props) {\n  return sizeStyle(props);\n}, function (props) {\n  return props.textAlign && textAlignStyle;\n}, function (props) {\n  return props.colorProp && colorStyle;\n}, function (props) {\n  return props.theme.paragraph.font && props.theme.paragraph.font.family && fontFamily;\n}, function (props) {\n  return props.theme.paragraph && props.theme.paragraph.extend;\n});\nStyledParagraph.defaultProps = {};\nObject.setPrototypeOf(StyledParagraph.defaultProps, defaultProps);\nexport { StyledParagraph };","map":{"version":3,"names":["styled","css","genericStyles","normalizeColor","textAlignStyle","defaultProps","colorStyle","props","colorProp","theme","sizeStyle","size","data","paragraph","height","fillProp","maxWidth","fontFamily","font","family","maxlinesStyle","maxLines","StyledParagraph","p","withConfig","displayName","componentId","textAlign","extend","Object","setPrototypeOf"],"sources":["/Users/siddharthkhatri/Developer/React JS/phone-book/client/node_modules/grommet/es6/components/Paragraph/StyledParagraph.js"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { genericStyles, normalizeColor, textAlignStyle } from '../../utils';\nimport { defaultProps } from '../../default-props';\nvar colorStyle = css([\"color:\", \";\"], function (props) {\n  return normalizeColor(props.colorProp, props.theme);\n});\n\nvar sizeStyle = function sizeStyle(props) {\n  var size = props.size || 'medium';\n  var data = props.theme.paragraph[size];\n  return css([\"font-size:\", \";line-height:\", \";max-width:\", \";\"], data ? data.size : size, data ? data.height : 'normal', props.fillProp ? 'none' : data && data.maxWidth);\n};\n\nvar fontFamily = css([\"font-family:\", \";\"], function (props) {\n  return props.theme.paragraph.font.family;\n});\n\nvar maxlinesStyle = function maxlinesStyle(props) {\n  return props.maxLines && css([\"display:-webkit-box;-webkit-line-clamp:\", \";-webkit-box-orient:vertical;overflow:hidden;\"], props.maxLines);\n};\n\nvar StyledParagraph = styled.p.withConfig({\n  displayName: \"StyledParagraph\",\n  componentId: \"sc-tbetod-0\"\n})([\"\", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], genericStyles, function (props) {\n  return maxlinesStyle(props);\n}, function (props) {\n  return sizeStyle(props);\n}, function (props) {\n  return props.textAlign && textAlignStyle;\n}, function (props) {\n  return props.colorProp && colorStyle;\n}, function (props) {\n  return props.theme.paragraph.font && props.theme.paragraph.font.family && fontFamily;\n}, function (props) {\n  return props.theme.paragraph && props.theme.paragraph.extend;\n});\nStyledParagraph.defaultProps = {};\nObject.setPrototypeOf(StyledParagraph.defaultProps, defaultProps);\nexport { StyledParagraph };"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,cAAxC,QAA8D,aAA9D;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,IAAIC,UAAU,GAAGL,GAAG,CAAC,CAAC,QAAD,EAAW,GAAX,CAAD,EAAkB,UAAUM,KAAV,EAAiB;EACrD,OAAOJ,cAAc,CAACI,KAAK,CAACC,SAAP,EAAkBD,KAAK,CAACE,KAAxB,CAArB;AACD,CAFmB,CAApB;;AAIA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBH,KAAnB,EAA0B;EACxC,IAAII,IAAI,GAAGJ,KAAK,CAACI,IAAN,IAAc,QAAzB;EACA,IAAIC,IAAI,GAAGL,KAAK,CAACE,KAAN,CAAYI,SAAZ,CAAsBF,IAAtB,CAAX;EACA,OAAOV,GAAG,CAAC,CAAC,YAAD,EAAe,eAAf,EAAgC,aAAhC,EAA+C,GAA/C,CAAD,EAAsDW,IAAI,GAAGA,IAAI,CAACD,IAAR,GAAeA,IAAzE,EAA+EC,IAAI,GAAGA,IAAI,CAACE,MAAR,GAAiB,QAApG,EAA8GP,KAAK,CAACQ,QAAN,GAAiB,MAAjB,GAA0BH,IAAI,IAAIA,IAAI,CAACI,QAArJ,CAAV;AACD,CAJD;;AAMA,IAAIC,UAAU,GAAGhB,GAAG,CAAC,CAAC,cAAD,EAAiB,GAAjB,CAAD,EAAwB,UAAUM,KAAV,EAAiB;EAC3D,OAAOA,KAAK,CAACE,KAAN,CAAYI,SAAZ,CAAsBK,IAAtB,CAA2BC,MAAlC;AACD,CAFmB,CAApB;;AAIA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBb,KAAvB,EAA8B;EAChD,OAAOA,KAAK,CAACc,QAAN,IAAkBpB,GAAG,CAAC,CAAC,yCAAD,EAA4C,+CAA5C,CAAD,EAA+FM,KAAK,CAACc,QAArG,CAA5B;AACD,CAFD;;AAIA,IAAIC,eAAe,GAAGtB,MAAM,CAACuB,CAAP,CAASC,UAAT,CAAoB;EACxCC,WAAW,EAAE,iBAD2B;EAExCC,WAAW,EAAE;AAF2B,CAApB,EAGnB,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,EAAnC,CAHmB,EAGqBxB,aAHrB,EAGoC,UAAUK,KAAV,EAAiB;EACzE,OAAOa,aAAa,CAACb,KAAD,CAApB;AACD,CALqB,EAKnB,UAAUA,KAAV,EAAiB;EAClB,OAAOG,SAAS,CAACH,KAAD,CAAhB;AACD,CAPqB,EAOnB,UAAUA,KAAV,EAAiB;EAClB,OAAOA,KAAK,CAACoB,SAAN,IAAmBvB,cAA1B;AACD,CATqB,EASnB,UAAUG,KAAV,EAAiB;EAClB,OAAOA,KAAK,CAACC,SAAN,IAAmBF,UAA1B;AACD,CAXqB,EAWnB,UAAUC,KAAV,EAAiB;EAClB,OAAOA,KAAK,CAACE,KAAN,CAAYI,SAAZ,CAAsBK,IAAtB,IAA8BX,KAAK,CAACE,KAAN,CAAYI,SAAZ,CAAsBK,IAAtB,CAA2BC,MAAzD,IAAmEF,UAA1E;AACD,CAbqB,EAanB,UAAUV,KAAV,EAAiB;EAClB,OAAOA,KAAK,CAACE,KAAN,CAAYI,SAAZ,IAAyBN,KAAK,CAACE,KAAN,CAAYI,SAAZ,CAAsBe,MAAtD;AACD,CAfqB,CAAtB;AAgBAN,eAAe,CAACjB,YAAhB,GAA+B,EAA/B;AACAwB,MAAM,CAACC,cAAP,CAAsBR,eAAe,CAACjB,YAAtC,EAAoDA,YAApD;AACA,SAASiB,eAAT"},"metadata":{},"sourceType":"module"}