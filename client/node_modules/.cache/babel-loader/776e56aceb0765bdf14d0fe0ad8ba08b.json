{"ast":null,"code":"var _excluded = [\"a11yTitle\", \"defaultSuggestion\", \"defaultValue\", \"dropAlign\", \"dropHeight\", \"dropTarget\", \"dropProps\", \"focusIndicator\", \"icon\", \"id\", \"messages\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onSelect\", \"onSuggestionSelect\", \"onSuggestionsClose\", \"onSuggestionsOpen\", \"placeholder\", \"plain\", \"readOnly\", \"reverse\", \"suggestions\", \"textAlign\", \"value\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Drop } from '../Drop';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { Keyboard } from '../Keyboard';\nimport { FormContext } from '../Form/FormContext';\nimport { AnnounceContext } from '../../contexts';\nimport { isNodeAfterScroll, isNodeBeforeScroll, sizeStyle, useForwardedRef } from '../../utils';\nimport { StyledTextInput, StyledTextInputContainer, StyledPlaceholder, StyledIcon, StyledSuggestions } from './StyledTextInput';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { TextInputPropTypes } from './propTypes';\n\nvar renderLabel = function renderLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    return suggestion.label || suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar stringLabel = function stringLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    if (suggestion.label && typeof suggestion.label === 'string') {\n      return suggestion.label;\n    }\n\n    return suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar ContainerBox = styled(Box).withConfig({\n  displayName: \"TextInput__ContainerBox\",\n  componentId: \"sc-1ai0c08-0\"\n})([\"\", \";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}\"], function (props) {\n  return props.dropHeight ? sizeStyle('max-height', props.dropHeight, props.theme) : 'max-height: inherit;';\n});\nvar defaultDropAlign = {\n  top: 'bottom',\n  left: 'left'\n};\nvar TextInput = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _inputRef$current;\n\n  var a11yTitle = _ref.a11yTitle,\n      defaultSuggestion = _ref.defaultSuggestion,\n      defaultValue = _ref.defaultValue,\n      _ref$dropAlign = _ref.dropAlign,\n      dropAlign = _ref$dropAlign === void 0 ? defaultDropAlign : _ref$dropAlign,\n      dropHeight = _ref.dropHeight,\n      dropTarget = _ref.dropTarget,\n      dropProps = _ref.dropProps,\n      _ref$focusIndicator = _ref.focusIndicator,\n      focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator,\n      icon = _ref.icon,\n      id = _ref.id,\n      messages = _ref.messages,\n      name = _ref.name,\n      _onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      onKeyDown = _ref.onKeyDown,\n      onSelect = _ref.onSelect,\n      onSuggestionSelect = _ref.onSuggestionSelect,\n      onSuggestionsClose = _ref.onSuggestionsClose,\n      onSuggestionsOpen = _ref.onSuggestionsOpen,\n      placeholder = _ref.placeholder,\n      plain = _ref.plain,\n      readOnly = _ref.readOnly,\n      reverse = _ref.reverse,\n      suggestions = _ref.suggestions,\n      textAlign = _ref.textAlign,\n      valueProp = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var announce = useContext(AnnounceContext);\n  var formContext = useContext(FormContext);\n  var inputRef = useForwardedRef(ref);\n  var dropRef = useRef();\n  var suggestionsRef = useRef(); // if this is a readOnly property, don't set a name with the form context\n  // this allows Select to control the form context for the name.\n\n  var _formContext$useFormI = formContext.useFormInput({\n    name: readOnly ? undefined : name,\n    value: valueProp\n  }),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1];\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _useState2 = useState(false),\n      showDrop = _useState2[0],\n      setShowDrop = _useState2[1];\n\n  var handleSuggestionSelect = useMemo(function () {\n    return onSelect && !onSuggestionSelect ? onSelect : onSuggestionSelect;\n  }, [onSelect, onSuggestionSelect]);\n  var handleTextSelect = useMemo(function () {\n    return onSelect && onSuggestionSelect ? onSelect : undefined;\n  }, [onSelect, onSuggestionSelect]);\n\n  var _useState3 = useState(),\n      suggestionsAtClose = _useState3[0],\n      setSuggestionsAtClose = _useState3[1];\n\n  var openDrop = useCallback(function () {\n    setShowDrop(true);\n    announce(format({\n      id: 'textInput.suggestionIsOpen',\n      messages: messages\n    }));\n    announce(suggestions.length + \" \" + format({\n      id: 'textInput.suggestionsCount',\n      messages: messages\n    }));\n    if (onSuggestionsOpen) onSuggestionsOpen();\n  }, [announce, messages, format, onSuggestionsOpen, suggestions]);\n  var closeDrop = useCallback(function () {\n    setSuggestionsAtClose(suggestions); // must be before closing drop\n\n    setShowDrop(false);\n    if (onSuggestionsClose) onSuggestionsClose();\n  }, [onSuggestionsClose, suggestions]);\n  var clickOutside = useCallback(function (event) {\n    if (event.target !== inputRef.current) closeDrop();\n  }, [inputRef, closeDrop]); // Handle scenarios where we have focus, the drop isn't showing,\n  // and the suggestions change. We don't want to open the drop if\n  // the drop has been closed by onEsc and the suggestions haven't\n  // changed. So, we remember the suggestions we are showing when\n  // the drop was closed and only re-open it when the suggestions\n  // subsequently change.\n\n  useEffect(function () {\n    if (focus && !showDrop && suggestions && suggestions.length && (!suggestionsAtClose || suggestionsAtClose.length !== suggestions.length)) {\n      openDrop();\n    }\n  }, [focus, openDrop, showDrop, suggestions, suggestionsAtClose]); // if we have no suggestions, close drop if it's open\n\n  useEffect(function () {\n    if (showDrop && (!suggestions || !suggestions.length)) {\n      closeDrop();\n    }\n  }, [closeDrop, showDrop, suggestions]);\n  var valueSuggestionIndex = useMemo(function () {\n    return suggestions ? suggestions.map(function (suggestion) {\n      return typeof suggestion === 'object' ? suggestion.value : suggestion;\n    }).indexOf(value) : -1;\n  }, [suggestions, value]); // choose the best suggestion, either the explicit default or the one\n  // that matches the current value\n\n  var resetSuggestionIndex = useMemo(function () {\n    if (valueSuggestionIndex === -1 && typeof defaultSuggestion === 'number') {\n      return defaultSuggestion;\n    }\n\n    return valueSuggestionIndex;\n  }, [defaultSuggestion, valueSuggestionIndex]); // activeSuggestionIndex unifies mouse and keyboard interaction of\n  // the suggestions\n\n  var _useState4 = useState(resetSuggestionIndex),\n      activeSuggestionIndex = _useState4[0],\n      setActiveSuggestionIndex = _useState4[1]; // Only update active suggestion index when the mouse actually moves,\n  // not when suggestions are moving under the mouse.\n\n\n  var _useState5 = useState(),\n      mouseMovedSinceLastKey = _useState5[0],\n      setMouseMovedSinceLastKey = _useState5[1]; // set activeSuggestionIndex when value changes\n\n\n  useEffect(function () {\n    return setActiveSuggestionIndex(valueSuggestionIndex);\n  }, [valueSuggestionIndex]); // reset activeSuggestionIndex when the drop is closed\n\n  useEffect(function () {\n    if (!showDrop) setActiveSuggestionIndex(resetSuggestionIndex);\n  }, [resetSuggestionIndex, showDrop]); // announce active suggestion\n\n  useEffect(function () {\n    if (activeSuggestionIndex >= 0) {\n      var label = stringLabel(suggestions[activeSuggestionIndex]);\n      announce(label + \" \" + format({\n        id: 'textInput.enterSelect',\n        messages: messages\n      }));\n    }\n  }, [activeSuggestionIndex, announce, messages, format, suggestions]); // make sure activeSuggestion is visible in scroll\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      var list = suggestionsRef.current;\n\n      if (showDrop && activeSuggestionIndex !== -1 && list) {\n        var container = list.parentNode;\n        var item = list.children[activeSuggestionIndex];\n\n        if (container.scrollTo) {\n          if (isNodeAfterScroll(item, container)) container.scrollTo(0, item.offsetTop - (container.getBoundingClientRect().height - item.getBoundingClientRect().height));else if (isNodeBeforeScroll(item, container)) container.scrollTo(0, item.offsetTop);\n        }\n      }\n    }, 50); // delay to allow Drop to animate in\n\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [activeSuggestionIndex, showDrop]);\n\n  var setValueFromSuggestion = function setValueFromSuggestion(event, suggestion) {\n    // if we stole the focus in the drop, perhaps by interacting with\n    // a suggestion button or the scrollbar, give it back\n    inputRef.current.focus();\n    inputRef.current.value = suggestion; // needed for uncontrolled cases\n\n    closeDrop();\n\n    if (handleSuggestionSelect) {\n      if (event.persist) event.persist();\n      var adjustedEvent = event;\n      adjustedEvent.suggestion = suggestion;\n      handleSuggestionSelect(adjustedEvent);\n    }\n\n    setValue(suggestion);\n  };\n\n  var onNextSuggestion = useCallback(function (event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);\n    setActiveSuggestionIndex(nextActiveIndex);\n    setMouseMovedSinceLastKey(false);\n  }, [activeSuggestionIndex, suggestions]);\n  var onPreviousSuggestion = useCallback(function (event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);\n    setActiveSuggestionIndex(nextActiveIndex);\n    setMouseMovedSinceLastKey(false);\n  }, [activeSuggestionIndex]); // account for input value in both controlled and uncontrolled scenarios\n\n  var hasValue = value || ((_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.value);\n  var showStyledPlaceholder = useMemo(function () {\n    return placeholder && typeof placeholder !== 'string' && !hasValue;\n  }, [hasValue, placeholder]);\n  var drop;\n  var extraProps = {\n    onSelect: handleTextSelect\n  };\n\n  if (showDrop) {\n    drop = /*#__PURE__*/React.createElement(Drop, _extends({\n      ref: dropRef,\n      id: id ? \"text-input-drop__\" + id : undefined,\n      align: dropAlign,\n      responsive: false,\n      target: dropTarget || inputRef.current,\n      onClickOutside: clickOutside,\n      onEsc: closeDrop\n    }, dropProps), /*#__PURE__*/React.createElement(ContainerBox, {\n      id: id ? \"listbox__\" + id : undefined,\n      role: \"listbox\",\n      overflow: \"auto\",\n      dropHeight: dropHeight,\n      onMouseMove: function onMouseMove() {\n        return setMouseMovedSinceLastKey(true);\n      }\n    }, /*#__PURE__*/React.createElement(StyledSuggestions, {\n      ref: suggestionsRef\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      items: suggestions,\n      step: theme.select.step,\n      show: activeSuggestionIndex !== -1 ? activeSuggestionIndex : undefined\n    }, function (suggestion, index, itemRef) {\n      var active = activeSuggestionIndex === index;\n      var selected = suggestion === value; // Determine whether the label is done as a child or\n      // as an option Button kind property.\n\n      var renderedLabel = renderLabel(suggestion);\n      var child;\n      if (typeof renderedLabel !== 'string') // must be an element rendered by suggestions.label\n        child = renderedLabel;else if (!theme.button.option) // don't have theme support, need to layout here\n        child = /*#__PURE__*/React.createElement(Box, {\n          align: \"start\",\n          pad: \"small\"\n        }, renderedLabel); // if we have a child, turn on plain\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: stringLabel(suggestion) + \"-\" + index,\n        ref: itemRef\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: id ? \"listbox-option-\" + index + \"__\" + id : undefined,\n        role: \"option\",\n        \"aria-selected\": selected ? 'true' : 'false',\n        active: active,\n        fill: \"horizontal\",\n        plain: !child ? undefined : true,\n        align: \"start\",\n        kind: !child ? 'option' : undefined,\n        label: !child ? renderedLabel : undefined,\n        onClick: function onClick(event) {\n          return setValueFromSuggestion(event, suggestion);\n        },\n        onMouseMove: mouseMovedSinceLastKey && activeSuggestionIndex !== index ? function () {\n          return setActiveSuggestionIndex(index);\n        } : undefined\n      }, child));\n    }))));\n  }\n\n  var keyboardProps = {\n    onKeyDown: onKeyDown\n  };\n\n  if (showDrop) {\n    keyboardProps.onEnter = function (event) {\n      // prevent submitting forms via Enter when the drop is open\n      event.preventDefault();\n      if (activeSuggestionIndex >= 0) setValueFromSuggestion(event, suggestions[activeSuggestionIndex]);else closeDrop();\n    };\n\n    if (activeSuggestionIndex > 0) keyboardProps.onUp = onPreviousSuggestion;\n    if (activeSuggestionIndex < suggestions.length - 1) keyboardProps.onDown = onNextSuggestion;\n    keyboardProps.onTab = closeDrop;\n  } else if (suggestions && suggestions.length > 0) {\n    keyboardProps.onDown = openDrop;\n  }\n  /*\n  If the text input has a list of suggestions, add the WAI-ARIA 1.2\n  combobox role and states.\n  */\n\n\n  var comboboxProps = {};\n  var activeOptionID;\n\n  if (id && (suggestions == null ? void 0 : suggestions.length) > -1) {\n    if (showDrop && activeSuggestionIndex > -1) {\n      activeOptionID = \"listbox-option-\" + activeSuggestionIndex + \"__\" + id;\n    }\n\n    comboboxProps = {\n      'aria-activedescendant': activeOptionID,\n      'aria-autocomplete': 'list',\n      'aria-expanded': showDrop ? 'true' : 'false',\n      'aria-controls': showDrop ? \"listbox__\" + id : undefined,\n      role: 'combobox'\n    };\n  } // For the Keyboard target below, if we have focus,\n  // either on the input element or within the drop,\n  // then we set the target to the document,\n  // otherwise we only listen to onDown on the input element itself,\n  // primarily for tests.\n\n\n  return /*#__PURE__*/React.createElement(StyledTextInputContainer, {\n    plain: plain\n  }, showStyledPlaceholder && /*#__PURE__*/React.createElement(StyledPlaceholder, null, placeholder), icon && /*#__PURE__*/React.createElement(StyledIcon, {\n    reverse: reverse,\n    theme: theme\n  }, icon), /*#__PURE__*/React.createElement(Keyboard, _extends({\n    target: focus ? 'document' : undefined\n  }, keyboardProps), /*#__PURE__*/React.createElement(StyledTextInput, _extends({\n    \"aria-label\": a11yTitle,\n    ref: inputRef,\n    id: id,\n    name: name,\n    autoComplete: \"off\",\n    plain: plain,\n    placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n    icon: icon,\n    reverse: reverse,\n    focus: focus,\n    focusIndicator: focusIndicator,\n    textAlign: textAlign\n  }, rest, extraProps, comboboxProps, {\n    defaultValue: renderLabel(defaultValue),\n    value: renderLabel(value),\n    readOnly: readOnly,\n    onFocus: function onFocus(event) {\n      // Don't do anything if we are acting like we already have\n      // focus. This can happen when this input loses focus temporarily\n      // to our drop, see onBlur() handler below.\n      if (!focus) {\n        setFocus(true);\n\n        if (suggestions && suggestions.length > 0) {\n          announce(format({\n            id: 'textInput.suggestionsExist',\n            messages: messages\n          }));\n          openDrop();\n        }\n\n        if (_onFocus) _onFocus(event);\n      }\n    },\n    onBlur: function onBlur(event) {\n      // Only treat it as a blur if the element receiving focus\n      // isn't in our drop. The relatedTarget will be our drop\n      // when the user clicks on a suggestion or interacts with the\n      // scrollbar in the drop.\n      if (!event.relatedTarget || event.relatedTarget !== dropRef.current) {\n        setFocus(false);\n        if (_onBlur) _onBlur(event);\n      }\n    },\n    onChange: readOnly ? undefined : function (event) {\n      // when TextInput is not contained in a Form, no re-render\n      // will come from this onChange and remove the placeholder\n      // so we need to update state to ensure the styled\n      // placeholder only appears when there is no value\n      if (suggestions && focus && !showDrop) {\n        openDrop();\n      }\n\n      setValue(event.target.value);\n      setActiveSuggestionIndex(resetSuggestionIndex);\n      if (onChange) onChange(event);\n    }\n  }))), drop);\n});\nTextInput.displayName = 'TextInput';\nTextInput.propTypes = TextInputPropTypes;\nexport { TextInput };","map":{"version":3,"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useCallback","useContext","useEffect","useMemo","useRef","useState","styled","ThemeContext","defaultProps","Box","Button","Drop","InfiniteScroll","Keyboard","FormContext","AnnounceContext","isNodeAfterScroll","isNodeBeforeScroll","sizeStyle","useForwardedRef","StyledTextInput","StyledTextInputContainer","StyledPlaceholder","StyledIcon","StyledSuggestions","MessageContext","TextInputPropTypes","renderLabel","suggestion","label","value","stringLabel","ContainerBox","withConfig","displayName","componentId","props","dropHeight","theme","defaultDropAlign","top","left","TextInput","_ref","ref","_inputRef$current","a11yTitle","defaultSuggestion","defaultValue","_ref$dropAlign","dropAlign","dropTarget","dropProps","_ref$focusIndicator","focusIndicator","icon","id","messages","name","_onBlur","onBlur","onChange","_onFocus","onFocus","onKeyDown","onSelect","onSuggestionSelect","onSuggestionsClose","onSuggestionsOpen","placeholder","plain","readOnly","reverse","suggestions","textAlign","valueProp","rest","_useContext","format","announce","formContext","inputRef","dropRef","suggestionsRef","_formContext$useFormI","useFormInput","undefined","setValue","_useState","focus","setFocus","_useState2","showDrop","setShowDrop","handleSuggestionSelect","handleTextSelect","_useState3","suggestionsAtClose","setSuggestionsAtClose","openDrop","closeDrop","clickOutside","event","current","valueSuggestionIndex","map","resetSuggestionIndex","_useState4","activeSuggestionIndex","setActiveSuggestionIndex","_useState5","mouseMovedSinceLastKey","setMouseMovedSinceLastKey","timer","setTimeout","list","container","parentNode","item","children","scrollTo","offsetTop","getBoundingClientRect","height","clearTimeout","setValueFromSuggestion","persist","adjustedEvent","onNextSuggestion","preventDefault","nextActiveIndex","Math","min","onPreviousSuggestion","max","hasValue","showStyledPlaceholder","drop","extraProps","createElement","align","responsive","onClickOutside","onEsc","role","overflow","onMouseMove","items","step","select","show","index","itemRef","active","selected","renderedLabel","child","button","option","pad","fill","kind","onClick","keyboardProps","onEnter","onUp","onDown","onTab","comboboxProps","activeOptionID","autoComplete","relatedTarget","propTypes"],"sources":["/Users/siddharthkhatri/Developer/React JS/phone-book/node_modules/grommet/es6/components/TextInput/TextInput.js"],"sourcesContent":["var _excluded = [\"a11yTitle\", \"defaultSuggestion\", \"defaultValue\", \"dropAlign\", \"dropHeight\", \"dropTarget\", \"dropProps\", \"focusIndicator\", \"icon\", \"id\", \"messages\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onSelect\", \"onSuggestionSelect\", \"onSuggestionsClose\", \"onSuggestionsOpen\", \"placeholder\", \"plain\", \"readOnly\", \"reverse\", \"suggestions\", \"textAlign\", \"value\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Drop } from '../Drop';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { Keyboard } from '../Keyboard';\nimport { FormContext } from '../Form/FormContext';\nimport { AnnounceContext } from '../../contexts';\nimport { isNodeAfterScroll, isNodeBeforeScroll, sizeStyle, useForwardedRef } from '../../utils';\nimport { StyledTextInput, StyledTextInputContainer, StyledPlaceholder, StyledIcon, StyledSuggestions } from './StyledTextInput';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { TextInputPropTypes } from './propTypes';\n\nvar renderLabel = function renderLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    return suggestion.label || suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar stringLabel = function stringLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    if (suggestion.label && typeof suggestion.label === 'string') {\n      return suggestion.label;\n    }\n\n    return suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar ContainerBox = styled(Box).withConfig({\n  displayName: \"TextInput__ContainerBox\",\n  componentId: \"sc-1ai0c08-0\"\n})([\"\", \";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}\"], function (props) {\n  return props.dropHeight ? sizeStyle('max-height', props.dropHeight, props.theme) : 'max-height: inherit;';\n});\nvar defaultDropAlign = {\n  top: 'bottom',\n  left: 'left'\n};\nvar TextInput = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _inputRef$current;\n\n  var a11yTitle = _ref.a11yTitle,\n      defaultSuggestion = _ref.defaultSuggestion,\n      defaultValue = _ref.defaultValue,\n      _ref$dropAlign = _ref.dropAlign,\n      dropAlign = _ref$dropAlign === void 0 ? defaultDropAlign : _ref$dropAlign,\n      dropHeight = _ref.dropHeight,\n      dropTarget = _ref.dropTarget,\n      dropProps = _ref.dropProps,\n      _ref$focusIndicator = _ref.focusIndicator,\n      focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator,\n      icon = _ref.icon,\n      id = _ref.id,\n      messages = _ref.messages,\n      name = _ref.name,\n      _onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      onKeyDown = _ref.onKeyDown,\n      onSelect = _ref.onSelect,\n      onSuggestionSelect = _ref.onSuggestionSelect,\n      onSuggestionsClose = _ref.onSuggestionsClose,\n      onSuggestionsOpen = _ref.onSuggestionsOpen,\n      placeholder = _ref.placeholder,\n      plain = _ref.plain,\n      readOnly = _ref.readOnly,\n      reverse = _ref.reverse,\n      suggestions = _ref.suggestions,\n      textAlign = _ref.textAlign,\n      valueProp = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var announce = useContext(AnnounceContext);\n  var formContext = useContext(FormContext);\n  var inputRef = useForwardedRef(ref);\n  var dropRef = useRef();\n  var suggestionsRef = useRef(); // if this is a readOnly property, don't set a name with the form context\n  // this allows Select to control the form context for the name.\n\n  var _formContext$useFormI = formContext.useFormInput({\n    name: readOnly ? undefined : name,\n    value: valueProp\n  }),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1];\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _useState2 = useState(false),\n      showDrop = _useState2[0],\n      setShowDrop = _useState2[1];\n\n  var handleSuggestionSelect = useMemo(function () {\n    return onSelect && !onSuggestionSelect ? onSelect : onSuggestionSelect;\n  }, [onSelect, onSuggestionSelect]);\n  var handleTextSelect = useMemo(function () {\n    return onSelect && onSuggestionSelect ? onSelect : undefined;\n  }, [onSelect, onSuggestionSelect]);\n\n  var _useState3 = useState(),\n      suggestionsAtClose = _useState3[0],\n      setSuggestionsAtClose = _useState3[1];\n\n  var openDrop = useCallback(function () {\n    setShowDrop(true);\n    announce(format({\n      id: 'textInput.suggestionIsOpen',\n      messages: messages\n    }));\n    announce(suggestions.length + \" \" + format({\n      id: 'textInput.suggestionsCount',\n      messages: messages\n    }));\n    if (onSuggestionsOpen) onSuggestionsOpen();\n  }, [announce, messages, format, onSuggestionsOpen, suggestions]);\n  var closeDrop = useCallback(function () {\n    setSuggestionsAtClose(suggestions); // must be before closing drop\n\n    setShowDrop(false);\n    if (onSuggestionsClose) onSuggestionsClose();\n  }, [onSuggestionsClose, suggestions]);\n  var clickOutside = useCallback(function (event) {\n    if (event.target !== inputRef.current) closeDrop();\n  }, [inputRef, closeDrop]); // Handle scenarios where we have focus, the drop isn't showing,\n  // and the suggestions change. We don't want to open the drop if\n  // the drop has been closed by onEsc and the suggestions haven't\n  // changed. So, we remember the suggestions we are showing when\n  // the drop was closed and only re-open it when the suggestions\n  // subsequently change.\n\n  useEffect(function () {\n    if (focus && !showDrop && suggestions && suggestions.length && (!suggestionsAtClose || suggestionsAtClose.length !== suggestions.length)) {\n      openDrop();\n    }\n  }, [focus, openDrop, showDrop, suggestions, suggestionsAtClose]); // if we have no suggestions, close drop if it's open\n\n  useEffect(function () {\n    if (showDrop && (!suggestions || !suggestions.length)) {\n      closeDrop();\n    }\n  }, [closeDrop, showDrop, suggestions]);\n  var valueSuggestionIndex = useMemo(function () {\n    return suggestions ? suggestions.map(function (suggestion) {\n      return typeof suggestion === 'object' ? suggestion.value : suggestion;\n    }).indexOf(value) : -1;\n  }, [suggestions, value]); // choose the best suggestion, either the explicit default or the one\n  // that matches the current value\n\n  var resetSuggestionIndex = useMemo(function () {\n    if (valueSuggestionIndex === -1 && typeof defaultSuggestion === 'number') {\n      return defaultSuggestion;\n    }\n\n    return valueSuggestionIndex;\n  }, [defaultSuggestion, valueSuggestionIndex]); // activeSuggestionIndex unifies mouse and keyboard interaction of\n  // the suggestions\n\n  var _useState4 = useState(resetSuggestionIndex),\n      activeSuggestionIndex = _useState4[0],\n      setActiveSuggestionIndex = _useState4[1]; // Only update active suggestion index when the mouse actually moves,\n  // not when suggestions are moving under the mouse.\n\n\n  var _useState5 = useState(),\n      mouseMovedSinceLastKey = _useState5[0],\n      setMouseMovedSinceLastKey = _useState5[1]; // set activeSuggestionIndex when value changes\n\n\n  useEffect(function () {\n    return setActiveSuggestionIndex(valueSuggestionIndex);\n  }, [valueSuggestionIndex]); // reset activeSuggestionIndex when the drop is closed\n\n  useEffect(function () {\n    if (!showDrop) setActiveSuggestionIndex(resetSuggestionIndex);\n  }, [resetSuggestionIndex, showDrop]); // announce active suggestion\n\n  useEffect(function () {\n    if (activeSuggestionIndex >= 0) {\n      var label = stringLabel(suggestions[activeSuggestionIndex]);\n      announce(label + \" \" + format({\n        id: 'textInput.enterSelect',\n        messages: messages\n      }));\n    }\n  }, [activeSuggestionIndex, announce, messages, format, suggestions]); // make sure activeSuggestion is visible in scroll\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      var list = suggestionsRef.current;\n\n      if (showDrop && activeSuggestionIndex !== -1 && list) {\n        var container = list.parentNode;\n        var item = list.children[activeSuggestionIndex];\n\n        if (container.scrollTo) {\n          if (isNodeAfterScroll(item, container)) container.scrollTo(0, item.offsetTop - (container.getBoundingClientRect().height - item.getBoundingClientRect().height));else if (isNodeBeforeScroll(item, container)) container.scrollTo(0, item.offsetTop);\n        }\n      }\n    }, 50); // delay to allow Drop to animate in\n\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [activeSuggestionIndex, showDrop]);\n\n  var setValueFromSuggestion = function setValueFromSuggestion(event, suggestion) {\n    // if we stole the focus in the drop, perhaps by interacting with\n    // a suggestion button or the scrollbar, give it back\n    inputRef.current.focus();\n    inputRef.current.value = suggestion; // needed for uncontrolled cases\n\n    closeDrop();\n\n    if (handleSuggestionSelect) {\n      if (event.persist) event.persist();\n      var adjustedEvent = event;\n      adjustedEvent.suggestion = suggestion;\n      handleSuggestionSelect(adjustedEvent);\n    }\n\n    setValue(suggestion);\n  };\n\n  var onNextSuggestion = useCallback(function (event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);\n    setActiveSuggestionIndex(nextActiveIndex);\n    setMouseMovedSinceLastKey(false);\n  }, [activeSuggestionIndex, suggestions]);\n  var onPreviousSuggestion = useCallback(function (event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);\n    setActiveSuggestionIndex(nextActiveIndex);\n    setMouseMovedSinceLastKey(false);\n  }, [activeSuggestionIndex]); // account for input value in both controlled and uncontrolled scenarios\n\n  var hasValue = value || ((_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.value);\n  var showStyledPlaceholder = useMemo(function () {\n    return placeholder && typeof placeholder !== 'string' && !hasValue;\n  }, [hasValue, placeholder]);\n  var drop;\n  var extraProps = {\n    onSelect: handleTextSelect\n  };\n\n  if (showDrop) {\n    drop = /*#__PURE__*/React.createElement(Drop, _extends({\n      ref: dropRef,\n      id: id ? \"text-input-drop__\" + id : undefined,\n      align: dropAlign,\n      responsive: false,\n      target: dropTarget || inputRef.current,\n      onClickOutside: clickOutside,\n      onEsc: closeDrop\n    }, dropProps), /*#__PURE__*/React.createElement(ContainerBox, {\n      id: id ? \"listbox__\" + id : undefined,\n      role: \"listbox\",\n      overflow: \"auto\",\n      dropHeight: dropHeight,\n      onMouseMove: function onMouseMove() {\n        return setMouseMovedSinceLastKey(true);\n      }\n    }, /*#__PURE__*/React.createElement(StyledSuggestions, {\n      ref: suggestionsRef\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      items: suggestions,\n      step: theme.select.step,\n      show: activeSuggestionIndex !== -1 ? activeSuggestionIndex : undefined\n    }, function (suggestion, index, itemRef) {\n      var active = activeSuggestionIndex === index;\n      var selected = suggestion === value; // Determine whether the label is done as a child or\n      // as an option Button kind property.\n\n      var renderedLabel = renderLabel(suggestion);\n      var child;\n      if (typeof renderedLabel !== 'string') // must be an element rendered by suggestions.label\n        child = renderedLabel;else if (!theme.button.option) // don't have theme support, need to layout here\n        child = /*#__PURE__*/React.createElement(Box, {\n          align: \"start\",\n          pad: \"small\"\n        }, renderedLabel); // if we have a child, turn on plain\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: stringLabel(suggestion) + \"-\" + index,\n        ref: itemRef\n      }, /*#__PURE__*/React.createElement(Button, {\n        id: id ? \"listbox-option-\" + index + \"__\" + id : undefined,\n        role: \"option\",\n        \"aria-selected\": selected ? 'true' : 'false',\n        active: active,\n        fill: \"horizontal\",\n        plain: !child ? undefined : true,\n        align: \"start\",\n        kind: !child ? 'option' : undefined,\n        label: !child ? renderedLabel : undefined,\n        onClick: function onClick(event) {\n          return setValueFromSuggestion(event, suggestion);\n        },\n        onMouseMove: mouseMovedSinceLastKey && activeSuggestionIndex !== index ? function () {\n          return setActiveSuggestionIndex(index);\n        } : undefined\n      }, child));\n    }))));\n  }\n\n  var keyboardProps = {\n    onKeyDown: onKeyDown\n  };\n\n  if (showDrop) {\n    keyboardProps.onEnter = function (event) {\n      // prevent submitting forms via Enter when the drop is open\n      event.preventDefault();\n      if (activeSuggestionIndex >= 0) setValueFromSuggestion(event, suggestions[activeSuggestionIndex]);else closeDrop();\n    };\n\n    if (activeSuggestionIndex > 0) keyboardProps.onUp = onPreviousSuggestion;\n    if (activeSuggestionIndex < suggestions.length - 1) keyboardProps.onDown = onNextSuggestion;\n    keyboardProps.onTab = closeDrop;\n  } else if (suggestions && suggestions.length > 0) {\n    keyboardProps.onDown = openDrop;\n  }\n  /*\n  If the text input has a list of suggestions, add the WAI-ARIA 1.2\n  combobox role and states.\n  */\n\n\n  var comboboxProps = {};\n  var activeOptionID;\n\n  if (id && (suggestions == null ? void 0 : suggestions.length) > -1) {\n    if (showDrop && activeSuggestionIndex > -1) {\n      activeOptionID = \"listbox-option-\" + activeSuggestionIndex + \"__\" + id;\n    }\n\n    comboboxProps = {\n      'aria-activedescendant': activeOptionID,\n      'aria-autocomplete': 'list',\n      'aria-expanded': showDrop ? 'true' : 'false',\n      'aria-controls': showDrop ? \"listbox__\" + id : undefined,\n      role: 'combobox'\n    };\n  } // For the Keyboard target below, if we have focus,\n  // either on the input element or within the drop,\n  // then we set the target to the document,\n  // otherwise we only listen to onDown on the input element itself,\n  // primarily for tests.\n\n\n  return /*#__PURE__*/React.createElement(StyledTextInputContainer, {\n    plain: plain\n  }, showStyledPlaceholder && /*#__PURE__*/React.createElement(StyledPlaceholder, null, placeholder), icon && /*#__PURE__*/React.createElement(StyledIcon, {\n    reverse: reverse,\n    theme: theme\n  }, icon), /*#__PURE__*/React.createElement(Keyboard, _extends({\n    target: focus ? 'document' : undefined\n  }, keyboardProps), /*#__PURE__*/React.createElement(StyledTextInput, _extends({\n    \"aria-label\": a11yTitle,\n    ref: inputRef,\n    id: id,\n    name: name,\n    autoComplete: \"off\",\n    plain: plain,\n    placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n    icon: icon,\n    reverse: reverse,\n    focus: focus,\n    focusIndicator: focusIndicator,\n    textAlign: textAlign\n  }, rest, extraProps, comboboxProps, {\n    defaultValue: renderLabel(defaultValue),\n    value: renderLabel(value),\n    readOnly: readOnly,\n    onFocus: function onFocus(event) {\n      // Don't do anything if we are acting like we already have\n      // focus. This can happen when this input loses focus temporarily\n      // to our drop, see onBlur() handler below.\n      if (!focus) {\n        setFocus(true);\n\n        if (suggestions && suggestions.length > 0) {\n          announce(format({\n            id: 'textInput.suggestionsExist',\n            messages: messages\n          }));\n          openDrop();\n        }\n\n        if (_onFocus) _onFocus(event);\n      }\n    },\n    onBlur: function onBlur(event) {\n      // Only treat it as a blur if the element receiving focus\n      // isn't in our drop. The relatedTarget will be our drop\n      // when the user clicks on a suggestion or interacts with the\n      // scrollbar in the drop.\n      if (!event.relatedTarget || event.relatedTarget !== dropRef.current) {\n        setFocus(false);\n        if (_onBlur) _onBlur(event);\n      }\n    },\n    onChange: readOnly ? undefined : function (event) {\n      // when TextInput is not contained in a Form, no re-render\n      // will come from this onChange and remove the placeholder\n      // so we need to update state to ensure the styled\n      // placeholder only appears when there is no value\n      if (suggestions && focus && !showDrop) {\n        openDrop();\n      }\n\n      setValue(event.target.value);\n      setActiveSuggestionIndex(resetSuggestionIndex);\n      if (onChange) onChange(event);\n    }\n  }))), drop);\n});\nTextInput.displayName = 'TextInput';\nTextInput.propTypes = TextInputPropTypes;\nexport { TextInput };"],"mappings":"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"},"metadata":{},"sourceType":"module"}